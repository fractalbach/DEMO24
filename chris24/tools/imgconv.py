# converts the image header palette data to 4 bit integers

# 0 0
# 1 17
# 2 34
# 3 51
# 4 68
# 5 85
# 6 102
# 7 119
# 8 136
# 9 153
# 10 170
# 11 187
# 12 204
# 13 221
# 14 238
# 15 255

s = """
	{ 17, 34, 68},
	{ 34, 34, 68},
	{ 34, 34, 85},
	{ 51, 34, 68},
	{ 17, 51, 68},
	{ 68, 34, 85},
	{ 17, 51, 85},
	{ 17, 51,102},
	{ 34, 51, 68},
	{ 34, 51, 85},
	{ 51, 51, 85},
	{ 68, 51, 85},
	{ 17, 68, 85},
	{ 17, 68,102},
	{ 85, 51, 68},
	{ 17, 68,119},
	{ 85, 51, 85},
	{ 34, 68, 85},
	{ 34, 68,102},
	{ 51, 68, 85},
	{ 51, 68,102},
	{ 68, 68, 85},
	{ 17, 85, 85},
	{ 17, 85,102},
	{ 85, 68, 68},
	{ 17, 85,119},
	{ 34, 85, 68},
	{ 17, 85,136},
	{ 34, 85,102},
	{ 34, 85,119},
	{102, 68, 85},
	{ 51, 85, 85},
	{ 51, 85,102},
	{119, 68,102},
	{ 68, 85,102},
	{ 68, 85,119},
	{136, 68, 85},
	{ 17,102,136},
	{ 34,102, 85},
	{ 85, 85,102},
	{ 34,102,102},
	{ 34,102,119},
	{ 51,102,102},
	{ 68,102,102},
	{ 68,102,119},
	{136, 85, 85},
	{ 85,102,102},
	{153, 85, 68},
	{ 85,102,119},
	{153, 85, 85},
	{ 34,119,136},
	{ 51,119, 85},
	{ 34,119,153},
	{ 51,119,102},
	{102,102,119},
	{ 51,119,119},
	{ 51,119,136},
	{119,102,102},
	{ 68,119,102},
	{ 68,119,119},
	{136,102, 85},
	{ 68,119,136},
	{ 85,119,102},
	{ 85,119,119},
	{153,102, 85},
	{ 85,119,136},
	{153,102,102},
	{102,119,102},
	{102,119,119},
	{ 51,136,119},
	{170,102, 85},
	{102,119,136},
	{ 51,136,136},
	{ 68,136, 85},
	{ 51,136,153},
	{ 68,136,102},
	{ 68,136,119},
	{ 85,136, 85},
	{ 68,136,153},
	{ 85,136,102},
	{ 85,136,119},
	{ 85,136,136},
	{102,136,153},
	{ 68,153,102},
	{ 51,153,170},
	{187,119,102},
	{119,136,153},
	{ 85,153, 85},
	{ 68,153,153},
	{ 85,153,102},
	{ 85,153,119},
	{ 85,153,153},
	{102,153,102},
	{ 85,153,170},
	{102,153,119},
	{153,136,136},
	{102,153,136},
	{119,153,102},
	{170,136,119},
	{102,153,170},
	{119,153,119},
	{119,153,136},
	{119,153,153},
	{ 85,170, 85},
	{187,136,119},
	{136,153,136},
	{102,170, 85},
	{136,153,170},
	{102,170,102},
	{ 85,170,170},
	{ 85,170,187},
	{119,170, 85},
	{102,170,187},
	{119,170,170},
	{119,170,187},
	{136,170,187},
	{119,187, 85},
	{119,187,102},
	{102,187,187},
	{170,170,170},
	{136,187,119},
	{119,187,187},
	{119,187,204},
	{136,187,153},
	{136,187,170},
	{204,170,136},
	{136,187,187},
	{153,187,136},
	{204,170,153},
	{136,187,204},
	{153,187,153},
	{153,187,170},
	{153,187,187},
	{136,204,204},
	{170,204,136},
	{221,187,153},
	{153,204,204},
	{170,204,153},
	{221,187,187},
	{170,204,204},
	{187,204,170},
	{187,204,187},
	{170,221,119},
	{204,204,204},
	{221,204,170},
	{187,221,153},
	{170,221,221},
	{187,221,204},
	{187,221,221},
	{204,221,187},
	{204,221,204},
	{204,221,221},
	{238,221,187},
	{187,238,238},
	{204,238,221},
	{221,238,170},
	{204,238,238},
	{221,238,187},
	{221,238,204},
	{221,238,221},
	{221,238,238},
	{238,238,204},
	{238,238,221},
	{255,238,221},
	{255,255,255},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{153,204,255},
	{187,221,255},
	{204,238,255},
	{238,255,255},
	{255,255,255},
	{238,255,255},
	{204,238,255},
	{170,221,255},
	{136,204,238},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{136,204,238},
	{170,238,255},
	{204,255,255},
	{238,255,255},
	{255,255,255},
	{204,238,255},
	{153,204,238},
	{238,238,255},
	{204,238,255},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{153,221,255},
	{170,221,255},
	{170,221,255},
	{187,221,255},
	{187,221,255},
	{204,221,255},
	{204,221,255},
	{221,204,255},
	{221,204,255},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{204, 17,  0},
	{221, 34,  0},
	{221, 51,  0},
	{221,102,  0},
	{238,136,  0},
	{238,170,  0},
	{255,204,  0},
	{255,238,  0},
	{255,255,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{255,255,255},
	{238,255,255},
	{204,238,255},
	{170,238,255},
	{136,221,255},
	{170,238,255},
	{187,238,255},
	{221,255,255},
	{238,255,255},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0},
	{  0,  0,  0}
"""


def imgconvHeader():
	global s
	z = s.replace('{', '').replace('}', '').replace('\t', '').split('\n')
	table = []

	for line in z:
		items = line.split(',')
		if len(items) < 3:
			continue
		r = int(items[0]) // 17
		g = int(items[1]) // 17
		b = int(items[2]) // 17

		table.append([r,g,b])
		# print(f' {r:b} , {g:b} , {b:b} ')
		# print(items[0], items[1], items[2])



	for i in range( len(table)//8 ):
		s = "\t"
		for j in range(8):
			e = table[ j + i*8 ]
			s += f"{{{e[0]:2d},{e[1]:2d},{e[2]:2d}}},"
		print(s)

	print(f"TABLE LENGTH = {len(table)}")


import base64
def imgconvBinary():
	b64 = """Fi5LHSxQIitLJStGLCpTKytLJixUMSlWNSxOJzJRIjNYMTFHIzVNPi9IGjlcIThWHzpQGjtXJTpGTzJYKz5lG0NrKUFhRTlbH0RmJUNhNj9eIEdeF0lqLERdHkhkIUlWLkVXTz1VREFWXT1WWUJRIFCAHlJ0K1BrJlJpH1RvMk9vKVVUKVRjL1NaH1dsH1hjOFBpOlFkR1BVIl51ZU5Uc0pVMF18aU5hIWGKGGWFJmNvFmaLPF12KmRoR1p3N2BwQ19VI2Z+d05mM2RhW1dpJ2hjPmFoSV1wQ2FiRGBxUl5ojU9XMmtbHG6PIXOJMW+GMXF0MXF9L3NtRGyGQHBsVmh6T2t8oFZTSG59ilxgT212Um5vXWt1O3tqRXhpM35rOX5koV5jKn6fOYBfMICWOoB5OYNaQXyTP36MNYKMUHmUgm1tQICDXXiJVXuKW3yErWZednWDanqHU4J+dHlzo25hYoF0RItvU4doQ4t3RIxqlHRhZoCCoHBwdH6DPI2jP42aQ42ORZBkRo2GWYl3U41lTIqjQ46VYYpmTYyaSZNcWo9cYYiWWYyRZYmQbYeVPZy0R5upVJ9nUpuhXp1sWZ54W5msV5+FcpSke5ObbZeiZJ9mZJqiZKNbXKViaJ6Lb599y4ZzXapduIuDfp2Ti5mVbadngp+Bd6R0vo93n5iUfKhqcKt0WK28a6i6Yqywca5ie6tkdKmye6iojKSsgL1dcbrKgL5udLu/grm9fbrEkbW9hrm4iL6Bk72alMF32KuOza6ftrW2m8GMjsK3pr23qb6hqcCRfsnSjMfShsrLj8nLoMXLl8jLndLYk9fVpNTSqNPauNLUr9XU6MmitNqau9TIstyM5cm/5c2ztuCBwdmzsdzNyd2ms+LpuuHe1drQxeDgx+LWzuPH0eHX0uDi2t/j8uG8yPHu1+/e1u7u2e7m3/K13fHP4u7i5vHE5e7t5/De8O/i9u7k//Dm/PTS/PPn8/fe6vno8ffo/PXa9/bn6vn1+vbg////"""
	arr = base64.b64decode(b64)
	# print(arr)
	# print(len(arr))
	b = bytearray(len(arr))
	for i in range(len(arr)):
		before = arr[i]
		after = (int(before) * 15 // 255) * 17
		print(f'{before:3d} -> {after:3d}')
		b[i] = after
	c = base64.b64encode(b)
	print(c)

imgconvHeader()
# imgconvBinary()


